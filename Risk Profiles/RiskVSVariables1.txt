
##p02 <- seq(0,0.40,length=50)
p02 <- 0.40
p08 <- 0.19
##p01 <- (0.4 + (0.4-p02))
p01 <- 0.4
p13 <- 0.80
p23 <- 0.50
p25 <- 0.10
p30 <- 0.10
p31 <- 0.20
p32 <- 0.01
p56 <- 0.25
p67 <- 0.70
p73 <- 1.00
p80 <- 0.90
p98 <- 0.35
p910 <- 0.60
p1011 <- 0.20
p114 <- 1.00

r <- 3.00
w <- 3.00
s <- 3.00

f <- expression((r*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))+(r+w)*((p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))+(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))+(r+w+s)*((p08*(p80-1)*(p114*(p910-(1-p98))-p114*p1011*p910))/(((p1011-1)*p910+1)*(1-(-(p80-1)*p98)/((p1011-1)*p910+1)))-(p32-(1-p30-p31))*((p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))+(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))))/(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))+(r*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*p25)/((1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*((p67-1)*p56+1))+(r*p56*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*p25)/((1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*((p67-1)*p56+1))-(r*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1)*(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))-((r+w)*p910*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1)*(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))+(r*(((p910-(1-p98))*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1))-(p1011*p910*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1))))/(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))

fp01 <- function(p01){eval(f[[1]])} ## black
fp02 <- function(p02){eval(f[[1]])} ## red
fp08 <- function(p08){eval(f[[1]])} ## blue
fp13 <- function(p13){eval(f[[1]])} ## brown
fp23 <- function(p23){eval(f[[1]])} ## lightgray
fp25 <- function(p25){eval(f[[1]])} ## darkgray
fp30 <- function(p30){eval(f[[1]])} ## darkorange
fp31 <- function(p31){eval(f[[1]])} ## darkorchid
fp32 <- function(p32){eval(f[[1]])} ## gold
fp56 <- function(p56){eval(f[[1]])} ## lavender
fp67 <- function(p67){eval(f[[1]])} ## green
fp73 <- function(p73){eval(f[[1]])} ## violet
fp80 <- function(p80){eval(f[[1]])} ## navy
fp98 <- function(p98){eval(f[[1]])} ## pink
fp910 <- function(p910){eval(f[[1]])} ## sandybrown
fp1011 <- function(p1011){eval(f[[1]])} ## turquoise1
fp114 <- function(p114){eval(f[[1]])} ## navyblue
fr <- function(r){eval(f[[1]])} ## ivory
fw <- function(w){eval(f[[1]])} ## lightseagreen
fs <- function(s){eval(f[[1]])} ## tan

#bv <- seq(0.00,0.99,length=500)
#bf <= function(bv){

#plot(0,0, axes=TRUE,ann=FALSE,xlim=c(0, 1),ylim = c(30,80))
curve(fp01,0.00, 0.99, n=500, xlab="Variables", ylab="Risk", col="black")
curve(fp02,0.00,0.99,n=500,col="red",add=TRUE)
curve(fp08,0.00,0.99,n=500,col="blue",add=TRUE)
curve(fp13,0.00,0.99,n=500,col="brown",add=TRUE)
curve(fp23,0.00,0.99,n=500,col="lightgray",add=TRUE)
curve(fp25,0.00,0.99,n=500,col="darkgray",add=TRUE)
curve(fp30,0.00,0.99,n=500,col="darkorange",add=TRUE)
curve(fp31,0.00,0.99,n=500,col="darkorchid",add=TRUE)
curve(fp32,0.00,0.99,n=500,col="gold",add=TRUE)
curve(fp56,0.00,0.99,n=500,col="lavender",add=TRUE)
curve(fp67,0.00,0.99,n=500,col="green",add=TRUE)
curve(fp73,0.00,0.99,n=500,col="violet",add=TRUE)
curve(fp80,0.00,0.99,n=500,col="navy",add=TRUE)
curve(fp98,0.00,0.99,n=500,col="pink",add=TRUE)
curve(fp910,0.00,0.99,n=500,col="sandybrown",add=TRUE)
curve(fp1011,0.00,0.99,n=500,col="turquoise1",add=TRUE)
curve(fp114,0.00,0.99,n=500,col="yellow",add=TRUE)
curve(fr,0.00,0.99,n=500,col="ivory",add=TRUE)
curve(fw,0.00,0.99,n=500,col="lightseagreen",add=TRUE)
curve(fs,0.00,0.99,n=500,col="tan",add=TRUE)

legend(0, 5, legend=c("Risk(p01)","Risk(p02)"),
       col=c("black", "red"), lty=1:2, cex=0.8)



##p02 <- seq(0,0.40,length=50)
p02 <- 0.40
p08 <- 0.19
##p01 <- (0.4 + (0.4-p02))
p01 <- 0.4
p13 <- 0.80
p23 <- 0.50
p25 <- 0.10
p30 <- 0.20
p31 <- 0.30
p32 <- 0.30
p56 <- 0.25
p67 <- 0.70
p73 <- 1.00
p80 <- 0.90
p98 <- 0.35
p910 <- 0.60
p1011 <- 0.20
p114 <- 1.00

r <- 3.00
w <- 3.00
s <- 3.00

f <- expression((r*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))+(r+w)*((p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))+(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))+(r+w+s)*((p08*(p80-1)*(p114*(p910-(1-p98))-p114*p1011*p910))/(((p1011-1)*p910+1)*(1-(-(p80-1)*p98)/((p1011-1)*p910+1)))-(p32-(1-p30-p31))*((p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))+(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))))/(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))+(r*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*p25)/((1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*((p67-1)*p56+1))+(r*p56*(p02/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-p32*p13*(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/((1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*p25)/((1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))*((p67-1)*p56+1))-(r*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1)*(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))-((r+w)*p910*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1)*(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))+(r*(((p910-(1-p98))*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1))-(p1011*p910*(p80-1)*p08)/((1-(-(p80-1)*p98)/((p1011-1)*p910+1))*((p1011-1)*p910+1))))/(1-(1-p01-p02-p08)-(p08*p80)/(1-(-(p80-1)*p98)/((p1011-1)*p910+1))-(-p02*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))-(-(p01+(p02*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))*(p13-1-p30*p13-(-p32*p13*(p25-(1-p23)-p30*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))))/(1-p31*p13-(p32*p13*p31*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1)))/(1-(-p25*(p56-1))/((p67-1)*p56+1)-p32*(p23+(p25*p73*p67*p56)/((p67-1)*p56+1))))))

fp01 <- function(p01){eval(D(f[[1]],'p01'))} ## black
fp02 <- function(p02){eval(D(f[[1]],'p02'))} ## red
fp08 <- function(p08){eval(D(f[[1]],'p08'))} ## blue
fp13 <- function(p13){eval(D(f[[1]],'p13'))} ## brown
fp23 <- function(p23){eval(D(f[[1]],'p23'))} ## lightgray
fp25 <- function(p25){eval(D(f[[1]],'p25'))} ## darkgray
fp30 <- function(p30){eval(D(f[[1]],'p30'))} ## darkorange
fp31 <- function(p31){eval(D(f[[1]],'p31'))} ## darkorchid
fp32 <- function(p32){eval(D(f[[1]],'p32'))} ## gold
fp56 <- function(p56){eval(D(f[[1]],'p56'))} ## lavender
fp67 <- function(p67){eval(D(f[[1]],'p67'))} ## green
fp73 <- function(p73){eval(D(f[[1]],'p73'))} ## violet
fp80 <- function(p80){eval(D(f[[1]],'p80'))} ## navy
fp98 <- function(p98){eval(D(f[[1]],'p98'))} ## pink
fp910 <- function(p910){eval(D(f[[1]],'p910'))} ## sandybrown
fp1011 <- function(p1011){eval(D(f[[1]],'p1011'))} ## turquoise1
fp114 <- function(p114){eval(D(f[[1]],'p114'))} ## navyblue
fr <- function(r){eval(D(f[[1]],'r'))} ## ivory
fw <- function(w){eval(D(f[[1]],'w'))} ## lightseagreen
fs <- function(s){eval(D(f[[1]],'s'))} ## tan

plot(fp01,0.00,0.99,n=500,col="black")
par(new=TRUE)
plot(fp02,0.00,0.99,n=500,col="red")
par(new=TRUE)
plot(fp08,0.00,0.99,n=500,col="blue")
par(new=TRUE)
plot(fp13,0.00,0.99,n=500,col="brown")
par(new=TRUE)
plot(fp23,0.00,0.99,n=500,col="lightgray")
par(new=TRUE)
plot(fp25,0.00,0.99,n=500,col="darkgray")
par(new=TRUE)
plot(fp30,0.00,0.99,n=500,col="darkorange")
par(new=TRUE)
plot(fp31,0.00,0.99,n=500,col="darkorchid")
par(new=TRUE)
plot(fp32,0.00,0.99,n=500,col="gold")
par(new=TRUE)
plot(fp56,0.00,0.99,n=500,col="lavender")
par(new=TRUE)
plot(fp67,0.00,0.99,n=500,col="green")
par(new=TRUE)
plot(fp73,0.00,0.99,n=500,col="violet")
par(new=TRUE)
plot(fp80,0.00,0.99,n=500,col="navy")
par(new=TRUE)
plot(fp98,0.00,0.99,n=500,col="pink")
par(new=TRUE)
plot(fp910,0.00,0.99,n=500,col="sandybrown")
par(new=TRUE)
plot(fp1011,0.00,0.99,n=500,col="turquoise1")
par(new=TRUE)
plot(fp114,0.00,0.99,n=500,col="yellow")
par(new=TRUE)
plot(fr,0.00,3.00,n=500,col="ivory")
par(new=TRUE)
plot(fw,0.00,3.00,n=500,col="lightseagreen")
par(new=TRUE)
plot(fs,0.00,3.00,n=500,col="tan")

##text(locator(), labels = c("red line", "black line)"))

##curve(x^2-2, add = TRUE, col = "violet")
##fp02 = D(f,'p02')
##plot(p02,function(p02){fp02})
##plot(f,0.00,0.40)
##Risk <- outer(p08,p02,f)
##op <- par(bg="white")
##persp(p08, p02, Risk, theta = 30, phi = 30, expand = 0.5, col = "white", main="p08 and ##p02 Risk Profile", ticktype="detailed", nticks=10, cex.axis = 0.6)


